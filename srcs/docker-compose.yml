version: '3.5'

services:
  nginx:
    build: requirements/nginx/
    image: nginx
    container_name: nginx
    ports:
      - 443:443
    volumes:
      - wordpress:/var/www/html
    networks:
      - inception
    depends_on:
      - wordpress
    restart: always

  mariadb:
    build:
      context: .
      dockerfile: requirements/mariadb/Dockerfile
      args:
        DB_NAME: ${DB_NAME}
        DB_USER: ${DB_USER}
        DB_USER_PW: ${DB_USER_PW}
        DB_ROOT_PW: ${DB_ROOT_PW}
    image: mariadb
    container_name: mariadb
    networks:
      - inception
    volumes:
      - db:/var/lib/mysql
    restart: always
  wordpress:
    build:
      context: .
      dockerfile: requirements/wordpress/Dockerfile
    image: wordpress
    env_file:
    - .env
    container_name: wordpress
    networks:
      - inception
    volumes:
      - wordpress:/var/www/html
    depends_on:
      - mariadb
    restart: always
  redis:
    build:
      context: .
      dockerfile: requirements/redis/Dockerfile
    image: redis
    container_name: redis
    networks:
      - inception
    restart: always
  vsftpd:
    build:
      context: .
      dockerfile: requirements/vsftpd/Dockerfile
      args:
        FTP_USER: ${FTP_USER}
        FTP_PW: ${FTP_PW}
    image: vsftpd
    env_file:
      - .env
    container_name: vsftpd
    ports:
      - "21:21"
    volumes:
      - wordpress:/var/www/
    networks:
     - inception
    restart: always
  webpage:
    build:
      context: .
      dockerfile: requirements/webpage/Dockerfile
    container_name: webpage
    image: webpage
    ports:
      - 80:80
    volumes:
      - webpage:/var/www/html
    networks:
      - inception
    restart: always
  adminer:
    build:
      context: .
      dockerfile: requirements/adminer/Dockerfile
    image: adminer
    container_name: adminer
    depends_on:
      - mariadb
    ports:
      - "8080:8080"
    networks:
     - inception
    restart: always
  borgbackup:
    build:
      context: .
      dockerfile: requirements/borgbackup/Dockerfile
      args:
        DB_NAME: ${DB_NAME}
        DB_USER: ${DB_USER}
        DB_USER_PW: ${DB_USER_PW}
    image: borgbackup
    container_name: borgbackup
    env_file:
      - .env
    volumes:
      - borgbackup:/data
    networks:
      - inception
    restart: always
volumes:
  wordpress:
    driver_opts:
      o: bind
      type: none
      device: /home/${USER}/data/wildberries
  db:
    driver_opts:
      o: bind
      type: none
      device: /home/${USER}/data/masha
  webpage:
    driver_opts:
      o: bind
      type: none
      device: /home/${USER}/data/webpage
  borgbackup:
    driver_opts:
      o: bind
      type: none
      device: /home/${USER}/data/borgbackup
networks:
    inception:
        name: inception
        driver: bridge
